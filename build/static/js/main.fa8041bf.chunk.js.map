{"version":3,"sources":["assets/icons sync /^/.//.*/.svg$","assets/icons/arrowDown.svg","assets/icons/back.svg","assets/icons/clear.svg","assets/icons/menu.svg","client/apolloClient/apolloClient.ts","client/routes/authenticated.route.tsx","client/graphql/index.ts","client/context/appContext.ts","client/layout/layout.container.component.tsx","client/shared/button/button.component.tsx","client/components/login/login.component.tsx","client/components/home/home.component.tsx","client/helpers/browser.helper.ts","client/shared/portal/portal.component.tsx","client/utils/click-outside-detect/click-outside-detect.component.tsx","client/shared/svg-icon/svg-icon.component.tsx","client/shared/modal/modal.component.tsx","client/helpers/date.ts","client/helpers/request.ts","client/components/holiday-request/active-request/active-request-list/active-request-list.component.tsx","client/models/models.ts","client/components/holiday-request/active-request/active-request.component.tsx","client/components/holiday-request/holiday-request.component.tsx","client/components/pending/pending-request-list/pending-request-list.component.tsx","client/utils/media-query-detect/media-query-detect.types.ts","client/components/pending/pending.component.tsx","client/utils/media-query-detect/media-query-detect.component.tsx","client/shared/dropdown/dropdown.component.tsx","client/components/add-holiday-request/add-request/add-request.component.tsx","client/components/add-holiday-request/add-holiday-request.component.tsx","client/routes/routes.tsx","client/shell/navigation/navigation.component.tsx","client/helpers/user.ts","client/shell/footer/footer.component.tsx","client/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","./arrowDown.svg","./back.svg","./clear.svg","./menu.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","httpLink","createHttpLink","uri","authLink","setContext","_","_ref","headers","token","localStorage","getItem","objectSpread","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","AuthenticatedRoute","Component","component","isAuth","rest","objectWithoutProperties","react","Route","assign","render","props","Redirect","to","pathname","state","from","location","LOGIN","gql","_templateObject","SIGN_UP","_templateObject2","DELETE_HOLIDAY_REQUEST","_templateObject3","GQL_UNITS","_templateObject4","WHO_AM_I","_templateObject5","ADD_HOLIDAY_REQUEST","_templateObject6","VALIDATE_TOKEN","_templateObject7","GET_DEVELOPER","_templateObject8","RESPOND_TO_HOLIDAY_REQUEST","_templateObject9","GET_UNIT_MANAGER","_templateObject10","GET_PROJECT_MANAGER","_templateObject11","GraphQLSchema","GET_HOLIDAY_REQUESTS","_templateObject12","GET_HOLIDAY_REQUESTS_MANAGER","_templateObject13","defaultContext","isApp","objectRefId","undefined","userId","role","user","logout","setIsApp","app","setAuth","auth","AppContext","React","LayoutContainer","noPadding","className","children","style","marginTop","Button","text","onClick","_ref$className","_ref$type","type","console","log","LoginComponent","emailRef","passwordRef","_React$useContext","es_Redirect","layout_container_component","react_apollo_esm","mutation","login","error","onSubmit","preventDefault","variables","username","value","password","then","res","setItem","data","catch","message","placeholder","ref","node","button_component","Home","isBrowser","window","document","createElement","Portal","_ref$appendTo","appendTo","portalRoot","querySelector","body","getPortalRoot","el","addPortalElement","_el$current$classList","current","classList","add","apply","toConsumableArray","split","filter","c","appendChild","removeChild","ReactDOM","createPortal","ClickOutsideDetect","_props$className","clickRef","useRef","handleOutsideClick","event","composedPath","some","onClickOutside","useEffect","setTimeout","addEventListener","removeEventListener","SvgIcon","iconName","svg","require","src","Modal","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isExiting","isOpen","handleKeyDown","preventClose","keyCode","ESCAPE_KEY","close","open","bind","assertThisInitialized","disableBackgroundInteraction","toggleBackgroundInteraction","_this2","_this$props","containerClassName","animationClassNames","animationDuration","includeBackdrop","includeExitButton","_this$state","portal_component","CSSTransition","timeout","in","appear","unmountOnExit","classNames","transitionDuration","onExited","exitAnimationDone","click_outside_detect_component","svg_icon_component","setState","onModalClosed","isEnabled","remove","defaultProps","dateDifference","startDate","endDate","startDateConverted","convertUnixToDate","endDateConverted","timeDif","Math","abs","getTime","ceil","unix","convertStringToInt","parseInt","toString","Date","holidayStatus","status","Role","ActiveRequestLis","query","toggleRequest","dataType","_ref2","loading","request","index","key","toLocaleDateString","unitManagerName","unitManagerApproval","refName","refApproval","ActiveRequest","_React$useState","_React$useState2","slicedToArray","activeRequest","setActiveRequest","_deleteHolidayRequest","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","GraphqlSchema","mutate","_id","stop","arguments","active_request_list_component","modal_component","toDateString","HolidayRequest","active_request_component","MediaQuery","PendingRequestList","projectManager","creatorName","unitManager","renderManagerName","Pending","respondToHolidayRequest","_x","_respondToHolidayRequest","response","refId","pending_request_list_component","MediaQueryDetect","mediaQueries","onWidthChange","breakpoint","matches","k","name","matchMedia","handler","forEach","mq","addListener","removeListener","match","includes","Dropdown","selectedValue","defaultValue","prevProps","compareOptions","options","isJson","returnIndex","handleChange","JSON","parse","handlePostChange","width","isInline","styles","controlledValue","dynamicSelectedValue","renderValue","media_query_detect_component","XS","SM","MD","length","backgroundColor","dropdownBackgroundColor","borderColor","stringify","onChange","selectItem","target","selectedIndex","o","color","iconColor","optionsBackgroundColor","optionsColor","object","optionHighlightColor","valueObject","prevOptions","newOptions","i","_this$props2","defaultIndex","AddRequest","objectDestructuringEmpty","initialState","_React$useState3","_React$useState4","activeProject","setActiveProject","projects","modifiers","start","end","developer","dropdown_component","findProject","find","s","project","push","dropdownOptions","DayPicker_default","numberOfMonths","selectedDays","onDayClick","date","range","DayPicker","DateUtils","addDayToRange","addHolidayRequest","projectId","AddHolidayRequest","add_request_component","Routes","Switch","exact","path","home_component","login_component","authenticated_route","Navigation","mobile","isMenuOpen","setIsMenuOpen","signOut","removeItem","toggleMenu","Links","NavLink","activeClassName","isAuthenticated","_isAuthenticated","sent","abrupt","getRefObject","_x2","_getRefObject","_callee2","results","_context2","t0","Footer","App","jwt","urlParams","URLSearchParams","search","has","get","Provider","BrowserRouter","react_media","navigation_component","routes","footer_component","Boolean","hostname","react_default","client_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa8041bf.chunk.js","sourcesContent":["var map = {\n\t\"./arrowDown.svg\": 171,\n\t\"./back.svg\": 172,\n\t\"./clear.svg\": 173,\n\t\"./menu.svg\": 174\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 170;","module.exports = __webpack_public_path__ + \"static/media/arrowDown.e3c7a49d.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.ba47fd4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.777b93c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.d68162e2.svg\";","import { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { setContext } from \"apollo-link-context\";\nimport { createHttpLink } from \"apollo-link-http\";\n\nconst httpLink = createHttpLink({\n    uri: \"http://localhost:4000/\"\n  });\n  \nconst authLink = setContext((_, { headers }: any) => {\nconst token = localStorage.getItem(\"token\");\nreturn {\n    headers: {\n    ...headers,\n    authorization: token ? token : \"\",\n    }\n}\n});\n\nconst client = new ApolloClient({\nlink: authLink.concat(httpLink),\ncache: new InMemoryCache()\n});\n\nexport default client;","import * as React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ninterface IAuthenticatedRoute {\n    component: any;\n    path: string;\n    isAuth: boolean;\n}\n\nconst AuthenticatedRoute: React.FC<IAuthenticatedRoute> = ({component: Component, isAuth, ...rest}) => {\n    return (\n        <Route {...rest} render={(props) => ( isAuth ) \n            ? <Component {...props} />\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        />\n    );\n}\n\nexport default AuthenticatedRoute;\n","import { DocumentNode } from \"graphql\";\nimport gql from \"graphql-tag\";\n\nconst LOGIN: DocumentNode = gql `\n    mutation logIn($username: String!, $password: String!) \n    {\n        login(username: $username, password: $password)\n    }\n`;\n\nconst SIGN_UP: DocumentNode = gql `\n    mutation signUp($username: String!, $password: String!)\n    {\n        signup(username: $username, password: $password)\n    }\n`;\n\nconst DELETE_HOLIDAY_REQUEST: DocumentNode = gql `\n    mutation deleteHolidayRequest($_id: String!)\n    {\n        deleteHolidayRequest(_id: $_id)\n    }\n`;\n\n\nconst GQL_UNITS: DocumentNode = gql `\n{\n    units {\n        _id,\n        name\n    }\n}\n`;\n\nconst WHO_AM_I: DocumentNode = gql `\n{\n    isLoggedIn {\n        username,\n    }\n}\n`;\n\nconst ADD_HOLIDAY_REQUEST: DocumentNode = gql `\n    mutation createHolidayRequest($_id: String!, $role: String!, $projectId: String, $to: String!, $from: String!)\n    {\n        createHolidayRequest(_id: $_id, role: $role, projectId: $projectId, to: $to, from: $from)\n    }\n    \n`;\n\nconst VALIDATE_TOKEN: DocumentNode = gql `\n    mutation isTokenValid($token: String!) \n    {\n        isTokenValid(token: $token)\n    }\n`;\n\nconst GET_DEVELOPER: DocumentNode = gql `\n    query developer($_id: String!)\n    {\n        developer(_id: $_id) \n        {\n            name,\n            ref,\n            unit,\n            projects {\n                _id,\n                name,\n                projectManager {\n                    _id,\n                    name,\n                }\n            },\n            holidayRequests {\n                _id\n            }\n        }    \n    }\n`;\n\nconst RESPOND_TO_HOLIDAY_REQUEST: DocumentNode = gql`\n    mutation respondToHolidayRequest($_id: String!, $role: String!, $refId: String!, $response: Boolean!)\n    {\n        respondToHolidayRequest(_id: $_id, role: $role, refId: $refId, response: $response)\n    }\n`;\n\nconst GET_UNIT_MANAGER: DocumentNode = gql `\n    query unitManager($_id: String!)\n    {\n        unitManager(_id: $_id) \n        {\n            name,\n            ref,\n            unit,\n            holidayRequests {\n                _id\n            }\n        }    \n    }\n`;\n\nconst GET_PROJECT_MANAGER: DocumentNode = gql `\n    query projectManager($_id: String!)\n    {\n        projectManager(_id: $_id) \n        {\n            name,\n            ref,\n            unit,\n            projects {\n                _id,\n            },\n            holidayRequests {\n                _id\n            }\n        }    \n    }\n`;\n\nconst GET_HOLIDAY_REQUESTS: DocumentNode = gql `\n    query getUserHolidayRequests($_id: String!)\n    {\n        getUserHolidayRequests(_id: $_id) {\n            _id,\n            unitManagerRef,\n            unitManagerName\n            unitManagerApproval,\n            refName,\n            ref,\n            refApproval,\n            from,\n            to,\n        }\n    }\n`;\n\nconst GET_HOLIDAY_REQUESTS_MANAGER: DocumentNode = gql`\n    query getPendingHolidayRequests($_id: String!)\n    {\n        getPendingHolidayRequests(_id: $_id) {\n            _id,\n            creatorName,\n            unitManagerRef,\n            unitManagerName\n            unitManagerApproval,\n            refName,\n            ref,\n            refApproval,\n            from,\n            to,\n        }\n    }\n`;\n\n\nconst GraphQLSchema = {\n    GET_HOLIDAY_REQUESTS,\n    ADD_HOLIDAY_REQUEST,\n    GQL_UNITS,\n    WHO_AM_I,\n    LOGIN,\n    SIGN_UP,\n    VALIDATE_TOKEN,\n    GET_DEVELOPER,\n    GET_UNIT_MANAGER,\n    GET_PROJECT_MANAGER,\n    DELETE_HOLIDAY_REQUEST,\n    GET_HOLIDAY_REQUESTS_MANAGER,\n    RESPOND_TO_HOLIDAY_REQUEST\n}\n\nexport default GraphQLSchema;\n\n","import * as React from \"react\";\nimport { Role, IUser, IDeveloper, IUnitManager, IProjectManager } from \"../models/models\";\n\nexport interface IAppContext  {\n    isAuth: boolean;\n    isApp: boolean;\n    objectRefId: string | undefined;\n    userId: string | undefined;\n    role: Role | undefined;\n    user: IDeveloper | IUnitManager | IProjectManager | undefined;\n    setIsApp: ( app: boolean ) => void;\n    setAuth: ( auth: boolean ) => void;\n    logout: () => void;\n}\n\nexport const defaultContext: IAppContext = {\n    isAuth: false,\n    isApp: false,\n    objectRefId: undefined,\n    userId: undefined,\n    role: undefined,\n    user: undefined,\n    logout: () => {\n        defaultContext.objectRefId = undefined,\n        defaultContext.user = undefined,\n        defaultContext.isApp = false;\n        defaultContext.isAuth = false;\n        defaultContext.userId = undefined;\n        defaultContext.role = undefined\n    },\n    setIsApp: (app: boolean) => {\n        defaultContext.isApp = app;\n    },\n    setAuth: (auth: boolean) => {\n        defaultContext.isAuth = auth;\n    },\n}\n\nexport const AppContext = React.createContext(defaultContext);","import * as React from 'react';\nimport { AppContext } from '../context/appContext';\n\ninterface IGrid {\n    noPadding?: boolean;\n    className?: string;\n    children: any;\n}\n\nconst LayoutContainer: React.FC<IGrid> = ({noPadding, className, children}) => {\n  const { isApp } = React.useContext(AppContext);\n  return (\n      <div style={ isApp ? { marginTop: 50} : undefined} className={`layout ${className ? className : \"\"} ${noPadding ? \"layout--no-padding\" : \"\"}`}>\n        {children}\n      </div>\n  )\n};\n\nexport default LayoutContainer;","import * as React from 'react';\n\ninterface IButton {\n    onClick?: any;\n    text: string;\n    className?: string;\n    type?: string;\n}\n\nconst Button: React.FunctionComponent<IButton> = ({text, onClick, className = \"\", type = \"submit\"}) => {\n  return (\n      <button type={type} className={`${className} button`} onClick={onClick !== undefined ? onClick : () => console.log()}>{text}</button>\n  )\n};\n\nexport default Button;","import * as React from 'react';\nimport GraphQLSchema from '../../graphql';\nimport { Mutation } from 'react-apollo';\nimport { AppContext } from '../../context/appContext';\nimport LayoutContainer from '../../layout';\nimport { Redirect } from 'react-router';\nimport Button from '../../shared/button';\n\nconst LoginComponent: React.FC<any> = (props: any) => {\n\tlet emailRef: HTMLInputElement | null;\n\tlet passwordRef: HTMLInputElement | null;\n\tconst { setAuth, isAuth, isApp } = React.useContext(AppContext);\n\n\tif ( isAuth && isApp === false) {\n\t\treturn (\n\t\t\t<Redirect to=\"/holidayrequest\" />\n\t\t)\n\t}\n\n\treturn (\n\t\t<LayoutContainer>\n\t\t<div className=\"login\">\n\t\t\t<Mutation mutation={ GraphQLSchema.LOGIN }>\n\t\t\t\t{( login, { error } ) => (\n\t\t\t\t\t<div className=\"login__container\">\n\t\t\t\t\t\t<h4 className=\"login__header\">Signin to IMPACT HM</h4>\n\t\t\t\t\t\t<form className=\"login__form\" onSubmit={e => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tlogin({\n\t\t\t\t\t\t\tvariables: { \n\t\t\t\t\t\t\t\tusername: emailRef!.value,\n\t\t\t\t\t\t\t\tpassword: passwordRef!.value,\n\t\t\t\t\t\t\t}}).then ((res: any) => {\n\t\t\t\t\t\t\t\tif (res != null) {\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\"token\", res.data.login);\n\t\t\t\t\t\t\t\t\tsetAuth(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).catch (e => {e.message});\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<input className=\"login__input\" placeholder=\"E-mail address\" type=\"email\" ref={ node => emailRef = node }/>\n\t\t\t\t\t\t\t<input className=\"login__input\" placeholder=\"Password\" type=\"password\" ref={ node => passwordRef = node }/>\n\t\t\t\t\t\t\t\t<Button className=\"login__input\" text=\"Login\" />\n\t\t\t\t\t\t\t{ error && (\n\t\t\t\t\t\t\t<p>{ error.message }</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Mutation>\n\t\t</div>\n\t\t</LayoutContainer>\n\t);\n};\n\nexport default LoginComponent;","import * as React from 'react';\nimport LayoutContainer from '../../layout';\n\nconst Home: React.FunctionComponent<any> = (props) => {\n\n    return (\n        <LayoutContainer>\n            <div className=\"home\">\n                <h2 className=\"home__title\">Welcome to IMPACT’s Holiday Manager</h2>\n                <h4 className=\"home__header\">IMPACT's Holiday Manager is used as internally way of handling holiday requests. </h4>\n                <h5 className=\"home__subheader\"> As a Developer</h5>\n                <p className=\"home__text\"> \n                    - You can add a new Holiday Request where you choose the date which you wish to have holiday.\n                </p>\n                <p className=\"home__text\"> \n                    - You can see all your active Holiday Requests and whether they are pending or have been approved/declined.\n                </p>\n                <h5 className=\"home__subheader\"> \n                    As a Project Manager or Unit Manager\n                </h5>\n                <p className=\"home__text\"> \n                    - You can also add a Holiday Request and the request will be send to your reference within the firm.\n                </p>\n                <p className=\"home__text\"> \n                    - You also have the ability to see all your active Holiday Requests and their status.\n                </p>\n                <p className=\"home__text\"> \n                    - You can see all pending Holiday Requests from Project Manager, Unit Manager or Developers and respond to them.\n                </p>\n            </div>\n        </LayoutContainer>\n)\n};\n\nexport default Home;","export const isBrowser = () => {\n    return (\n        typeof window !== \"undefined\" &&\n        window.document &&\n        window.document.createElement\n    );\n};\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { isBrowser } from \"../../helpers/browser.helper\";\n\ninterface IPortalProps {\n    className?: string;\n    appendTo?: string;\n}\n\nexport const Portal: React.FC<IPortalProps> = ({ children, className = \"\", appendTo = \"\" }: any): React.ReactPortal | null => {\n    const portalRoot = React.useRef<HTMLElement | undefined>(getPortalRoot());\n    const el = React.useRef<HTMLElement | undefined>(addPortalElement());\n\n    function getPortalRoot() {\n        if (isBrowser()) {\n            return appendTo ? document.querySelector(appendTo) : document.body;\n        }\n\n        return undefined;\n    }\n\n    function addPortalElement() {\n        if (isBrowser()) {\n            return document.createElement(\"div\");\n        }\n\n        return undefined;\n    }\n\n    React.useEffect(() => {\n        if (isBrowser()) {\n            if (portalRoot.current && el.current) {\n                el.current.classList.add(...className!.split(\" \").filter((c: string) => !!c));\n                portalRoot.current.appendChild(el.current);\n            }\n        }\n\n        return () => {\n            if (portalRoot.current && el.current) {\n                portalRoot.current.removeChild(el.current);\n            }\n        };\n    }, []);\n\n    return (\n        !!el.current\n            ? ReactDOM.createPortal(\n                children,\n                el.current\n            )\n            : null\n    );\n};\n\nexport default Portal;\n","import * as React from \"react\";\nimport { FC, useEffect, useRef } from \"react\";\n\nimport { isBrowser } from \"../../helpers/browser.helper\";\n\ninterface IClickOutsideDetectProps {\n    onClickOutside: (event?: MouseEvent) => void;\n    style?: React.CSSProperties;\n    className?: string;\n}\n\nexport const ClickOutsideDetect: FC<IClickOutsideDetectProps> = props => {\n    const { children, className = \"\", style } = props;\n    const clickRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (isBrowser()) {\n            // Timeout is used to add event listener after an eventual click event used to spawn the container has finished it's bubbling phase.\n            setTimeout(() => {\n                window.addEventListener(\"click\", handleOutsideClick);\n            }, 0);\n\n            return () => {\n                window.removeEventListener(\"click\", handleOutsideClick);\n            };\n        }\n    }, []);\n\n    function handleOutsideClick(event: MouseEvent): void {\n        const path = event.composedPath && event.composedPath();\n\n        if (!path) {\n            return;\n        }\n\n        if (!event.composedPath().some((e) => ((e as HTMLDivElement) === clickRef.current))) {\n            props.onClickOutside(event);\n        }\n    }\n\n    return (\n        <div className={className} style={style} ref={clickRef}>\n            {children}\n        </div>\n    );\n};\n\nexport default ClickOutsideDetect;\n","import * as React from \"react\";\n\nexport interface ISvgIconProps {\n    iconName: string;\n    className?: string;\n}\n\nconst SvgIcon: React.FC<ISvgIconProps> = (props) => {\n    const { iconName, className = \"\" } = props;\n\n    try {\n        const svg = require(`../../../assets/icons/${iconName}.svg`);\n        return <img src={svg} className={`svg-icon ${className}`}></img>\n    } catch (e) {\n        console.error(e);\n    }\n    return <React.Fragment />;\n};\n\nexport default SvgIcon;\n","import * as React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Portal from \"../portal/portal.component\";\nimport ClickOutsideDetect from \"../../utils/click-outside-detect\";\nimport { isBrowser } from \"../../helpers/browser.helper\";\nimport SvgIcon from \"../svg-icon\";\n\ninterface IModalProps {\n    animationDuration?: number; // Default: 300\n    includeBackdrop?: boolean; // Default: true\n    includeExitButton?: boolean; // Default: true\n    className?: string; // Default: \"\"\n    containerClassName?: string; // Default: \"\"\n    animationClassNames?: string; // Defaults: \"fade\"\n    disableBackgroundInteraction?: boolean; // Default: true\n    style?: React.CSSProperties;\n    onModalClosed?: () => void;\n    ref: React.RefObject<Modal>;\n    preventClose: boolean;\n}\n\ninterface IModalState {\n    isExiting: boolean;\n    isOpen: boolean;\n}\n\nconst DISABLE_INTERACTION_CLASS = \"disable-interaction\";\n\nclass Modal extends React.Component<IModalProps, IModalState> {\n    public static defaultProps: Readonly<Partial<IModalProps>> = {\n        animationDuration: 300,\n        includeBackdrop: true,\n        includeExitButton: true,\n        disableBackgroundInteraction: true,\n        className: \"\",\n        containerClassName: \"\",\n        animationClassNames: \"fade\",\n        preventClose: false\n    };\n    private static ESCAPE_KEY = 27;\n\n    public state: Readonly<IModalState> = { isExiting: false, isOpen: false };\n\n    constructor(props: IModalProps) {\n        super(props);\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n    }\n\n    public componentWillUnmount(): void {\n        const { disableBackgroundInteraction } = this.props;\n\n        if (disableBackgroundInteraction && isBrowser()) {\n            this.toggleBackgroundInteraction(true);\n        }\n        document.removeEventListener(\"keydown\", this.handleKeyDown);\n    }\n\n    public componentWillMount(): void {\n        this.toggleBackgroundInteraction(true);\n    }\n\n    public componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleKeyDown);\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            children,\n            className,\n            containerClassName,\n            animationClassNames,\n            animationDuration,\n            includeBackdrop,\n            includeExitButton,\n            style\n        } = this.props;\n        const { isExiting, isOpen } = this.state;\n\n        if (!isOpen) {\n            return null;\n        }\n\n        return (\n            <Portal className={`modal ${containerClassName}`}>\n                {includeBackdrop ?\n                    <CSSTransition timeout={animationDuration!} in={!isExiting} appear={true} unmountOnExit classNames=\"fade\">\n                        <div className=\"modal__backdrop\" style={{ transitionDuration: `${animationDuration}ms` }}></div>\n                    </CSSTransition>\n                    : null}\n                <CSSTransition\n                    timeout={animationDuration!}\n                    in={!isExiting}\n                    appear={true}\n                    unmountOnExit\n                    classNames={animationClassNames!}\n                    onExited={this.exitAnimationDone.bind(this)}\n                    >\n                        {!this.props.preventClose ? (\n                        <ClickOutsideDetect className={`modal__container ${className}`}\n                            style={{ ...style, transitionDuration: `${animationDuration}ms` }}\n                            onClickOutside={this.close.bind(this)}\n                        >\n                            {\n                                !!includeExitButton ?\n                                    <React.Fragment>\n                                        <div onClick={() => this.close()} className=\"modal__exit-button\">\n                                            <SvgIcon iconName=\"clear\" />\n                                        </div>\n                                        {children}\n                                    </React.Fragment>\n                                    :\n                                    children\n                            }\n                        </ClickOutsideDetect>\n                        ) : (\n                            <div  className={`modal__container ${className}`}>\n                                {children}\n                            </div>\n                        )}\n                </CSSTransition>\n            </Portal>\n        );\n    }\n\n    public open(): void {\n        const { disableBackgroundInteraction } = this.props;\n        const { isOpen } = this.state;\n\n        if (isOpen) {\n            return;\n        }\n\n        this.setState({ isOpen: true });\n\n        if (disableBackgroundInteraction && isBrowser()) {\n            this.toggleBackgroundInteraction(false);\n        }\n    }\n\n    public close(): void {\n        const { isOpen } = this.state;\n\n        if (!isOpen) {\n            return;\n        }\n\n        this.setState({ isExiting: true });\n    }\n\n    private exitAnimationDone(): void {\n        const { disableBackgroundInteraction } = this.props;\n        this.setState({ isExiting: false, isOpen: false });\n\n        if (this.props.onModalClosed != null) {\n            this.props.onModalClosed();\n        }\n\n        if (disableBackgroundInteraction && isBrowser()) {\n            this.toggleBackgroundInteraction(true);\n        }\n    }\n\n    private toggleBackgroundInteraction(isEnabled: boolean) {\n        if (isBrowser()) {\n            if (isEnabled) {\n                document.body.classList.remove(DISABLE_INTERACTION_CLASS);\n            } else {\n                document.body.classList.add(DISABLE_INTERACTION_CLASS);\n            }\n        }\n    }\n\n    private handleKeyDown = (event: any) => {\n        if (!this.props.preventClose) {\n            switch (event.keyCode) {\n                case Modal.ESCAPE_KEY:\n                    this.close();\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}\n\nexport default Modal;\n","export function dateDifference(startDate: Date, endDate: Date) {\n    const startDateConverted = convertUnixToDate(startDate);\n    const endDateConverted= convertUnixToDate(endDate);\n    const timeDif = Math.abs(startDateConverted.getTime() - endDateConverted.getTime());\n    return Math.ceil(timeDif / (1000 * 3600 * 24));\n}\nexport function convertUnixToDate (unix: Date) {\n    const convertStringToInt = parseInt(unix.toString(), 10)\n    const date = new Date(convertStringToInt)\n    return date;\n}","export function holidayStatus (status: boolean | undefined | null) {\n    if ( status === null || status === undefined) {\n        return \"Pending\"\n    } else {\n        if ( status ) {\n            return \"Approved\"\n        } else {\n            return \"Unapproved\"\n        }\n    }\n}","import * as React from 'react';\nimport { DocumentNode } from 'graphql';\nimport { Query } from 'react-apollo';\nimport { IHolidayRequest } from '../../../../models/models';\nimport { convertUnixToDate, dateDifference } from '../../../../helpers/date';\nimport { holidayStatus } from '../../../../helpers/request';\n\ninterface IRequestListProps {\n    query: DocumentNode;\n    variables: object;\n    toggleRequest: any;\n    dataType: string;\n    className?: string;\n}\n\nconst ActiveRequestLis: React.FC<IRequestListProps> = ({query, variables, toggleRequest, dataType, className = \"active-request-list\"}): JSX.Element => {\n    return (\n      <>\n        <div className={`${className}__headlines`}>\n            <div className={`${className}__headline`}>Period</div>\n            <div className={`${className}__headline_days`}>Days</div>\n            <div className={`${className}__headline`}>Unit Manager</div>\n            <div className={`${className}__headline`}>Project Manager</div>\n        </div>\n        <div className={`${className}__requests`}>\n            <Query query={query} variables={variables}>\n                {({ loading, error, data}) => {\n                    if ( loading ) return <p>Loading...</p>;\n                    if ( error ) return <p>Error...</p>;\n                    if ( data ) return (data[dataType] as IHolidayRequest[]).map((request: IHolidayRequest, index: number) => {\n                        return (\n                            <div className={`${className}__request`} onClick={() => toggleRequest(data[dataType], index)} key={index}>\n                                <div className={`${className}__request-text`}>{convertUnixToDate(request.from).toLocaleDateString()} {convertUnixToDate(request.to).toLocaleDateString()}</div>\n                                <div className={`${className}__request-days`}>{dateDifference(request.from, request.to)}</div>\n                                <div className={`${className}__request-text`}>{request.unitManagerName} - <span className={`${className}__request-status`}>{holidayStatus(request.unitManagerApproval)}</span></div>\n                                {request.ref ? \n                                <div className={`${className}__request-text`}>{request.refName} - <span className={`${className}__request-status`}>{holidayStatus(request.refApproval)}</span></div> \n                                :  \n                                <div className={`${className}__request-text`}>NaN</div>}\n                            </div>\n                        )\n                    })\n                }}\n            </Query>\n        </div>\n      </>\n    );\n}\n\nexport default ActiveRequestLis;\n\n","export interface IUser {\n    _id: string;\n    username: string;\n    password: string;\n    ref?: string;\n    role: Role;\n}\n\nexport interface IUnit {\n    _id: string;\n    name: string;\n    projects: IProject[];\n    developers: IDeveloper[];\n    unitManager: IUnitManager;\n    projectManagers: IProjectManager[];\n}\n\nexport interface IProject {\n    _id: string;\n    name: string;\n    unit: IUnit;\n    projectManager: IProjectManager;\n    developers: IDeveloper[];\n}\n\nexport enum Role {\n    unitManager = \"Unit Manager\",\n    projectManager = \"Project Manager\",\n    developer = \"Developer\",\n}\n\nexport interface IEmployee {\n    _id: string;\n    name: string;\n    holidayRequests?: IHolidayRequest[];\n    ref?: string;\n}\n\nexport interface IUnitEmployee extends IEmployee {\n    unit: IUnit;\n}\n\nexport interface IDeveloper extends IUnitEmployee {\n    projects: IProject[];\n}\n\nexport interface IUnitManager extends IUnitEmployee { }\n\nexport interface IProjectManager extends IUnitEmployee {\n    projects: IProject[];\n}\n\nexport interface IHolidayRequest {\n    _id: string;\n    creatorRef: string;\n    creatorName: string | undefined,\n    unitManagerName?: string;\n    unitManagerRef?: string;\n    unitManagerApproval?: boolean;\n    refName?: string; \n    ref?: string;\n    refApproval?: boolean;\n    from: Date,\n    to: Date\n}\n\n\n","import * as React from 'react';\nimport GraphqlSchema from \"../../../graphql\";\nimport { AppContext } from '../../../context/appContext';\nimport { IHolidayRequest } from '../../../models/models';\nimport client from \"../../../apolloClient\";\nimport { DocumentNode } from 'graphql';\nimport Modal from '../../../shared/modal/modal.component';\nimport ActiveRequestList from './active-request-list';\nimport { convertUnixToDate } from '../../../helpers/date';\nimport Button from '../../../shared/button';\n\nconst ActiveRequest: React.FunctionComponent<any> = (props) => {\n    const className = \"active-request\";\n    const { objectRefId } = React.useContext(AppContext);\n    const [ activeRequest, setActiveRequest ] = React.useState<IHolidayRequest | undefined>(undefined);\n    const ref = React.createRef<Modal>();\n\n    async function deleteHolidayRequest(): Promise<void> {\n        let mutation: DocumentNode = GraphqlSchema.DELETE_HOLIDAY_REQUEST;\n        await client.mutate({\n            mutation,\n            variables: {\n                _id: activeRequest!._id\n            }\n        }).catch(e => {\n            console.log(e.message);\n        }).then(e => {\n            ref.current!.close();\n        })\n    }\n\n    const toggleRequest = (data: IHolidayRequest[], index: number): void => {\n        if (!!ref!.current) {\n            ref.current.open();\n        }\n        setActiveRequest(data[index])\n    }\n\n    return (\n        <div className={`${className}`}>\n            <ActiveRequestList dataType={\"getUserHolidayRequests\"} toggleRequest={toggleRequest} query={GraphqlSchema.GET_HOLIDAY_REQUESTS} variables={{_id: objectRefId}} />\n            {activeRequest !== undefined && (\n                <Modal className={`${className}__modal`} ref={ref}>\n                    <h4 className={`${className}__modal__header`}>Delete Holiday Request</h4>\n                    <p className={`${className}__modal__description`}>Do you wish to delete the following Holiday Request?</p>\n                    <div className={`${className}__modal__request`}>\n                        Ranging from: \n                        <span className={`${className}__modal__date`}>\n                            {convertUnixToDate(activeRequest.from).toDateString()}\n                        </span>\n                    </div>\n                    <div className={`${className}__modal__request`}>\n                        to:  \n                        <span className={`${className}__modal__date`}>\n                            {convertUnixToDate(activeRequest.to).toDateString()}\n                        </span>\n                    </div>\n                    <Button text=\"Yes\" onClick={deleteHolidayRequest} className={`${className}__modal__button`} />\n                </Modal>\n            )}\n        </div>\n)\n};\n\nexport default ActiveRequest;","import * as React from 'react';\nimport LayoutContainer from '../../layout';\nimport ActiveRequest from './active-request';\n\nconst HolidayRequest: React.FunctionComponent<any> = (props) => {\n\n    const className = \"holiday-request\";\n    return (\n        <LayoutContainer>\n            <div className={`${className}`}>\n                <div className={`${className}__wrapper`}>\n                    <div className={`${className}__header`}>\n                        <h4 className={`${className}__title`}>Your Holiday Requests</h4>\n                        <p className={`${className}__description`}>Get an overview of all your Holiday Requests, and delete one if wanted.</p>\n                    </div>\n                </div>\n                <ActiveRequest />\n            </div>\n        </LayoutContainer>\n    )\n};\n\nexport default HolidayRequest;","import * as React from 'react';\nimport { DocumentNode } from 'graphql';\nimport { Query } from 'react-apollo';\nimport { IHolidayRequest, Role } from '../../../models/models';\nimport { convertUnixToDate, dateDifference } from '../../../helpers/date';\nimport { holidayStatus } from '../../../helpers/request';\nimport { AppContext } from '../../../context/appContext';\n\ninterface IRequestListProps {\n    query: DocumentNode;\n    variables: object;\n    toggleRequest: any;\n    dataType: string;\n    className?: string;\n}\n\nconst PendingRequestList: React.FC<IRequestListProps> = ({query, variables, toggleRequest, dataType, className = \"pending-request-list\"}): JSX.Element => {\n    const { role } = React.useContext(AppContext);\n\n    const renderManagerName = (request: IHolidayRequest): JSX.Element => {\n        if ( role === Role.unitManager) {\n            return <div className={`${className}__request-text`}>{request.refName} - <span className={`${className}__request-status`}>{holidayStatus(request.refApproval)}</span></div>\n        }\n        if (role === Role.projectManager) {\n            return <div className={`${className}__request-text`}>{request.unitManagerName} - <span className={`${className}__request-status`}>{holidayStatus(request.unitManagerApproval)}</span></div>\n        }\n        return <div>\"Nan\"</div>;\n    }\n    return (\n      <>\n        <div className={`${className}__headlines`}>\n            <div className={`${className}__headline`}>Period</div>\n            <div className={`${className}__headline_days`}>Days</div>\n            <div className={`${className}__headline`}>Requester</div>\n            <div className={`${className}__headline`}>{role === Role.projectManager ? \"Project Manager\" : \"Unit Manager\"}</div>\n        </div>\n        <div className={`${className}__requests`}>\n            <Query query={query} variables={variables}>\n                {({ loading, error, data}) => {\n                    if ( loading ) return <p>Loading...</p>;\n                    if ( error ) return <p>Error...</p>;\n                    if ( data ) return (data[dataType] as IHolidayRequest[]).map((request: IHolidayRequest, index: number) => {\n                        return (\n                            <div className={`${className}__request`} onClick={() => toggleRequest(data[dataType], index)} key={index}>\n                                <p className={`${className}__request-text`}>{convertUnixToDate(request.from).toLocaleDateString()} - {convertUnixToDate(request.to).toLocaleDateString()}</p>\n                                <p className={`${className}__request-days`}>{dateDifference(request.from, request.to)}</p>\n                                <p className={`${className}__request-text`}>{request.creatorName}</p>\n                                {renderManagerName(request)}\n                            </div>\n                        )\n                    })\n                }}\n            </Query>\n        </div>\n      </>\n    );\n}\n\nexport default PendingRequestList;\n\n","export enum MediaQuery {\n    XS = \"(max-width: 480px)\",\n    SM = \"(max-width: 767px)\",\n    MD = \"(min-width: 768px) and (max-width: 992px)\",\n    LG = \"(min-width: 993px)\",\n}\n","import * as React from 'react';\nimport { Query } from 'react-apollo';\nimport GraphqlSchema from \"../../graphql\";\nimport { AppContext } from '../../context/appContext';\nimport { IHolidayRequest } from '../../models/models';\nimport LayoutContainer from '../../layout';\nimport Modal from '../../shared/modal/modal.component';\nimport PendingRequestList from './pending-request-list';\nimport { convertUnixToDate } from '../../helpers/date';\nimport { DocumentNode } from 'graphql';\nimport client from '../../apolloClient';\nimport Button from '../../shared/button';\n\nconst Pending: React.FC<any> = (props) => {\n    const { objectRefId, role } = React.useContext(AppContext);\n    const [ activeRequest, setActiveRequest ] = React.useState<any>(undefined);\n    const ref = React.createRef<Modal>();\n\n    const toggleRequest = (data: IHolidayRequest[], index: number): void => {\n        if (!!ref!.current) {\n            ref.current.open();\n        }\n        setActiveRequest(data[index])\n    }\n\n    async function respondToHolidayRequest(response: boolean): Promise<void> {\n        let mutation: DocumentNode = GraphqlSchema.RESPOND_TO_HOLIDAY_REQUEST;\n        await client.mutate({\n            mutation,\n            variables: {\n                _id: activeRequest!._id,\n                role,\n                refId: objectRefId,\n                response\n            }\n        }).catch(e => {\n            console.log(e.message);\n        }).then(e => {\n            if (!!ref!.current) {\n                ref.current.close();\n            }\n        })\n    }\n\n    const className = \"pending\";\n        return (\n            <LayoutContainer>\n                <div className={`${className}`}>\n                    <div className={`${className}__wrapper`}>\n                        <div className={`${className}__header`}>\n                            <h5 className={`${className}__title`}>Pending Holiday Requests</h5>\n                            <p className={`${className}__description`}>Get an overview of pending holiday requests that you can approve</p>\n                        </div>\n                        <PendingRequestList toggleRequest={toggleRequest} dataType={\"getPendingHolidayRequests\"} query={GraphqlSchema.GET_HOLIDAY_REQUESTS_MANAGER} variables={{_id: objectRefId}}/>\n                        {activeRequest !== undefined && (\n                            <Modal className={`${className}__modal`} ref={ref}>\n                                <h4 className={`${className}__modal__header`}>Respond to Holiday Request</h4>\n                                <p className={`${className}__modal__description`}>Do you wish to approve or decline the following Holiday Request?</p>\n                                <div className={`${className}__modal__request`}>\n                                    Ranging from: \n                                    <span className={`${className}__modal__date`}>\n                                        {convertUnixToDate(activeRequest.from).toDateString()}\n                                    </span>\n                                </div>\n                                <div className={`${className}__modal__request`}>\n                                    to:  \n                                    <span className={`${className}__modal__date`}>\n                                        {convertUnixToDate(activeRequest.to).toDateString()}\n                                    </span>\n                                </div>\n                                <div className={`${className}__modal__buttons`}>\n                                    <button onClick={() => respondToHolidayRequest(true)} className={`${className}__modal__button button`}>Approve</button>\n                                    <button onClick={() => respondToHolidayRequest(false)} className={`${className}__modal__button-decline button`}>Decline</button>\n                                </div>\n                            </Modal>\n                        )}\n                    </div>\n                </div>\n            </LayoutContainer>\n        )\n};\n\nexport default Pending;","import * as React from \"react\";\nimport { IMediaQueryDetectProps, IMediaQueryDetectState } from \"./media-query-detect\";\nimport { MediaQuery } from \"./media-query-detect.types\";\n\nclass MediaQueryDetect extends React.Component<IMediaQueryDetectProps, IMediaQueryDetectState> {\n    public mediaQueries: any[] = [];\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            breakpoint: \"\"\n        };\n    }\n\n    public componentDidMount() {\n        if (typeof window !== \"undefined\") {\n            this.mediaQueries = Object.keys(MediaQuery).map((k: any) => ({\n                name: k,\n                query: window.matchMedia(MediaQuery[k]),\n                handler: this.onWidthChange.bind(this, k)\n            }));\n\n            this.mediaQueries.forEach((mq: any) => {\n                if (mq.query.matches) {\n                    this.setState({ breakpoint: mq.name });\n                }\n                mq.query.addListener(mq.handler);\n            });\n        }\n    }\n\n    public componentWillUnmount() {\n        this.mediaQueries.forEach((mq: any) => mq.query.removeListener && mq.query.removeListener(mq.handler));\n    }\n\n    public onWidthChange = (breakpoint: string, query: any) => {\n        if (query.matches) {\n            this.setState({ breakpoint });\n        }\n    }\n\n    public render() {\n        const { breakpoint } = this.state;\n        const props = {\n            breakpoint,\n            match: this.props.match.includes(MediaQuery[breakpoint])\n        };\n\n        return this.props.children(props);\n    }\n}\n\nexport default MediaQueryDetect;\n","import * as React from \"react\";\n\nimport SvgIcon from \"../svg-icon\";\nimport MediaQueryDetect from \"../../utils/media-query-detect\";\nimport { MediaQuery } from \"../../utils/media-query-detect/media-query-detect.types\";\n\nimport { IDropdown } from \"./dropdown\";\n\n/**\n * @description\n * Takes list of options. Outputs selected option.\n * The preselected option is the option in position 0 in the options array.\n *\n * @param {number} [width] if unset the dropdown goes full width. Width can be set to a pixel amount.\n * @param {string} [defaultValue] Sets the value of the dropdown before it has changed.\n * @param {number} [defaultIndex] if set, option corresponding to value will be set initially.\n * @param {IDropdownStyles} [styles] styles for the dropdown. Refer to IDropdownStyles in \"./dropdown.d.ts\".\n *\n * @example\n *\n * // Simple types\n * const options = [1, 2, 3];\n *\n *  <Dropdown options={options} />;\n *\n * // Complex types, child as function used for selecting values to as options.\n *  const options = [{ name: \"something\" }, { name: \"else\" }];\n *\n *  <Dropdown options={options}>\n *      {({ name }) => name}\n *  </Dropdown>;\n */\n\ninterface IDropdownState {\n    isOpen: boolean;\n    selectedValue?: any;\n}\n\nclass Dropdown extends React.Component<IDropdown, IDropdownState> {\n    public static defaultProps: Partial<IDropdown> = {\n        className: \"\",\n        styles: {\n            dropdownBackgroundColor: \"\",\n            optionHighlightColor: \"\",\n            optionsBackgroundColor: \"\",\n            optionsColor: \"\",\n            iconColor: \"\",\n            borderColor: \"\"\n        }\n    };\n\n    constructor(props: Readonly<IDropdown>) {\n        super(props);\n\n        this.state = { isOpen: false, selectedValue: this.defaultValue };\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IDropdown>): void {\n        if (!this.compareOptions(prevProps.options, this.props.options)) {\n            return;\n        }\n    }\n\n    public selectItem(value: string, isJson?: boolean, index?: number): void {\n        if (!!this.props.returnIndex) {\n            if (isJson && !!this.props.defaultValue) {\n                // We have a mocked value, so we subtract index\n                index = index! - 1;\n            }\n            value = this.props.options[index!];\n            if (!!this.props.handleChange) {\n                this.props.handleChange(index);\n            }\n        } else {\n            value = isJson ? JSON.parse(value) : value;\n\n            if (!!this.props.handleChange) {\n                this.props.handleChange(value);\n            }\n        }\n\n        this.setState({ selectedValue: value });\n        if (!!this.props.handlePostChange) {\n            this.props.handlePostChange();\n        }\n    }\n\n    public render() {\n        const { options, width, isInline, className, styles, defaultValue, controlledValue } = this.props;\n        const { selectedValue, isOpen } = this.state;\n        const value = controlledValue || selectedValue;\n        const dynamicSelectedValue = typeof value === \"string\" ? value : this.renderValue(value);\n\n        return (\n            <MediaQueryDetect match={[MediaQuery.XS, MediaQuery.SM, MediaQuery.MD]}>\n                {({ match }: { match: boolean }) => match ?\n                    <div className={`dropdown ${className} ${isInline ? \" dropdown--inline\" : \"\"} ${options.length === 0 ? \" dropdown--disabled\" : \"\"}`}\n                        style={{ width: width + \"px\", backgroundColor: styles!.dropdownBackgroundColor, borderColor: styles!.borderColor }}\n                    >\n                        <select className=\"dropdown__portable-select\"\n                            value={JSON.stringify(controlledValue) || JSON.stringify(selectedValue)}\n                            onChange={e => this.selectItem(e.target.value, true, e.target.selectedIndex)}\n                        >\n                            {!!defaultValue ?\n                                <option value=\"\">{defaultValue}</option>\n                                : null}\n                            {options.map((o: any, index: number) => (\n                                <option key={index} value={JSON.stringify(o)}>{this.renderValue(o)}</option>\n                            ))}\n                        </select>\n                        <div className=\"dropdown__spacer\" style={{ backgroundColor: styles!.borderColor }} />\n                        <div className=\"dropdown__icon-container\" style={{ color: styles!.iconColor }}>\n                            <SvgIcon className=\"dropdown__icon\" iconName=\"arrowDown\" />\n                        </div>\n                    </div>\n                    :\n                    <div className={`dropdown ${className} ${isInline ? \"dropdown--inline\" : \"\"} ${options.length === 0 ? \"dropdown--disabled\" : \"\"}`}\n                        onClick={() => this.setState({ isOpen: !this.state.isOpen })}\n                        style={{ width: width + \"px\", backgroundColor: styles!.dropdownBackgroundColor, borderColor: styles!.borderColor }}\n                    >\n                        <div className=\"dropdown__value\">{dynamicSelectedValue}</div>\n                        <div className=\"dropdown__spacer\" style={{ backgroundColor: styles!.borderColor }} />\n                        <div className=\"dropdown__icon-container\" style={{ color: styles!.iconColor }}>\n                            <SvgIcon className=\"dropdown__icon\" iconName=\"arrowDown\" />\n                        </div>\n                        {isOpen && options.length > 0 ?\n                            <ul className=\"dropdown__list\" style={{ backgroundColor: styles!.optionsBackgroundColor, color: styles!.optionsColor }}>\n                                    {options!.map((object: any, index: number) => (\n                                        <li className={`dropdown__item ${controlledValue === object ? \"dropdown__item--active\" : \"\"}`}\n                                            key={index}\n                                            onClick={() => this.selectItem(object, false, index)}\n                                        >\n                                            <span className=\"dropdown__item-hover-bg\" style={{ backgroundColor: styles!.optionHighlightColor }} />\n                                            {this.renderValue(object)}\n                                        </li>\n                                ))}\n                            </ul>\n                            :\n                            null\n                        }\n                    </div>\n                }\n            </MediaQueryDetect>\n        );\n    }\n\n    private renderValue(valueObject: any): any {\n        return typeof this.props.children === \"function\" ? this.props.children(valueObject) : valueObject;\n    }\n\n    private get defaultValue(): any {\n        const { defaultIndex, defaultValue, options } = this.props;\n\n        if (defaultValue != null) {\n            return defaultValue;\n        } else if (defaultIndex !== undefined) {\n            return options[defaultIndex];\n        }\n\n        return options[0];\n    }\n\n    private compareOptions(prevOptions: string[], newOptions: string[]): boolean {\n        if (prevOptions.length !== newOptions.length) {\n            return false;\n        }\n        for (let i = 0; i < prevOptions.length; i++) {\n            if (prevOptions[i] !== newOptions[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport default Dropdown;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { Mutation } from 'react-apollo';\nimport GraphqlSchema from \"../../../graphql\";\nimport { AppContext } from '../../../context/appContext';\nimport { Role, IDeveloper } from '../../../models/models';\nimport Dropdown from '../../../shared/dropdown/dropdown.component';\nimport Button from '../../../shared/button';\n\ninterface IAddRequestProps {\n}\ninterface IRangeState {\n    from: Date;\n    to: Date;\n}\n\nconst AddRequest: React.FunctionComponent<IAddRequestProps> = ({}) => {\n    const className = \"add-request\";\n    const initialState: IRangeState = {\n        from: new Date,\n        to: new Date,\n    };\n    const numberOfMonths = 2;\n    const [ state, setState ] = React.useState<IRangeState>(initialState);\n    const { user, objectRefId, role } = React.useContext(AppContext);\n    const [ activeProject, setActiveProject ] = React.useState<any | undefined>(undefined);\n\n    React.useEffect(() => {\n        if ( user !== undefined ) {\n            if ((user as IDeveloper).projects !== undefined) {\n                setActiveProject((user as IDeveloper).projects[0])\n              }\n        }\n    }, [])\n\n    const handleDayClick = (date: Date) => {\n        const range = DayPicker.default.DateUtils.addDayToRange(date, state);\n        setState(range);\n        console.log(range);\n    }\n\n    const handleDropdownChange = (value: string) => {\n        const projects = (user as IDeveloper).projects;\n        if (projects !== undefined || null) {\n          const findProject = projects.find(s => s.projectManager.name === value);\n          setActiveProject(findProject);\n        }\n    }\n\n    function dropdownOptions(): any[] {\n        if ( user !== undefined) {\n            const projects = (user as IDeveloper).projects;\n            let options: any[] = [];\n            projects.forEach(project => {\n                options.push(project.projectManager.name)\n            });\n            return options;\n        }\n        return [];\n    }\n\n    const handleResetClick = (): void => {\n        setState(initialState);\n    }\n    const { from, to } = state;\n    const modifiers = { start: from, end: to};\n    return (\n        <div className={`${className}`}>\n            {role === Role.developer && (\n                <>\n                <div className={`${className}__project`}>Pick the Project Manager you want to refer to request to</div>\n                <Dropdown handleChange={handleDropdownChange} className={`${className}__dropdown`} options={dropdownOptions()}></Dropdown>\n                </>\n            )}\n            <p className={`${className}__description`}>Pick the dates you where you wish to have vacation </p>\n            <div className={`${className}__selected`}>\n                <div className={`${className}__selected-header`}>Selected Dates</div>\n                { from && to && (\n                    <div className={`${className}__selected-dates`}>\n                        <div className={`${className}__selected-date`}>{from.toLocaleDateString()}</div>\n                        <div className={`${className}__selected-date`}>-</div>\n                        <div className={`${className}__selected-date`}>{to.toLocaleDateString()}</div>\n                    </div>\n                )}\n            </div>\n        {from && to && <Button className={`${className}__reset-button`} onClick={handleResetClick} text=\"Reset\"/> }\n        <DayPicker.default\n            className=\"Selectable\"\n            numberOfMonths={numberOfMonths}\n            selectedDays={[from, { from, to }]}\n            modifiers={modifiers}\n            onDayClick={handleDayClick}\n        />\n        <Mutation mutation={GraphqlSchema.ADD_HOLIDAY_REQUEST}>\n            {( addHolidayRequest, { error }) => (\n                <Button text=\"Add Request\" className={`${className}__add-button`} onClick={(e: any) => {\n                    e.preventDefault();\n                    addHolidayRequest({\n                    variables: {\n                    _id: objectRefId,\n                    role,\n                    projectId: activeProject._id,\n                    to,\n                    from,\n                    }\n                }).catch( e => {\n                console.log(e.message);\n                })\n                }}/>\n            )}\n        </Mutation>\n        </div>\n);\n};\n\nexport default AddRequest;","import * as React from 'react';\nimport LayoutContainer from '../../layout';\nimport AddRequest from './add-request';\n\nconst AddHolidayRequest: React.FC<any> = ({}) => {\n    const className = \"add-holiday-request\";\n    return (\n        <LayoutContainer>\n            <div className={`${className}`}>\n                <div className={`${className}__wrapper`}>\n                    <div className={`${className}__header`}>\n                        <h4 className={`${className}__title`}>Add a Holiday Request</h4>\n                    </div>\n                </div>\n                <AddRequest />\n            </div>\n        </LayoutContainer>\n    );\n}\n\nexport default AddHolidayRequest;\n","import * as React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthenticatedRoute from './authenticated.route';\nimport LoginComponent from '../components/login/login.component';\nimport Home from '../components/home';\nimport HolidayRequest from '../components/holiday-request';\nimport { AppContext } from '../context/appContext';\nimport { Role } from '../models/models';\nimport Pending from '../components/pending';\nimport AddHolidayRequest from '../components/add-holiday-request';\n\ninterface IRoutes {\n}\n\nconst Routes: React.FC<IRoutes> = (props) => {\n\tconst { isAuth, role } = React.useContext(AppContext);\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact={true} path=\"/\" render={ props => <Home {...props}/>}/>\n\t\t\t<Route path=\"/login\" render={ props => <LoginComponent {...props}/>}/>\n\t\t\t<AuthenticatedRoute path=\"/holiday-request\" component={ HolidayRequest } isAuth={isAuth} />\n\t\t\t<AuthenticatedRoute path=\"/add-request\" component={ AddHolidayRequest } isAuth={isAuth} />\n\t\t\t{role !== Role.developer && <AuthenticatedRoute path=\"/pending\" component={ Pending } isAuth={isAuth} />}\n\t\t\t{/* {role !== Role.developer && <AuthenticatedRoute path=\"/overview\" component={ GraphQLComponent } isAuth={isAuth} />} */}\n\t\t\t<Redirect to=\"/\" />\n\t\t</Switch>\n\t)\n};\n\nexport default Routes;","import * as React from 'react';\nimport LayoutContainer from '../../layout';\nimport { NavLink } from 'react-router-dom';\nimport { AppContext } from '../../context/appContext';\nimport Logo from \"../../../assets/icons/menu.svg\";\nimport { Role } from '../../models/models';\nimport SvgIcon from '../../shared/svg-icon';\n\ninterface INavigationProps {\n    mobile: boolean;\n}\n\nconst Navigation: React.FunctionComponent<INavigationProps> = ({mobile}) => {\nconst { isAuth, logout, role} = React.useContext(AppContext);\nconst [ isMenuOpen, setIsMenuOpen ] = React.useState<boolean>(false);\nconst className = mobile ? \"navigation--mobile\" : \"navigation\";\n\nconst signOut = () => {\n    logout();\n    localStorage.removeItem(\"token\");\n}\n\nconst toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n}\n\nconst Links = () => {\n    if ( isAuth ) {\n        return (\n            <React.Fragment>\n                <NavLink onClick={toggleMenu} exact={true} activeClassName=\"link--active\" className={`${className}__link`} to=\"/\">Home</NavLink>\n                <NavLink onClick={toggleMenu} activeClassName=\"link--active\" className={`${className}__link`} to=\"/holiday-request\">My Requests</NavLink>\n                <NavLink onClick={toggleMenu} activeClassName=\"link--active\" className={`${className}__link`} to=\"/add-request\">Add Request</NavLink>\n                {role !== Role.developer && \n                    // <NavLink onClick={toggleMenu} activeClassName=\"link--active\" className={`${className}__link`} to=\"/overview\">Overview</NavLink>\n                    <NavLink onClick={toggleMenu} activeClassName=\"link--active\" className={`${className}__link`} to=\"/pending\">Pending Requests</NavLink>\n                }\n                <div className={`${className}__link`} onClick={signOut} > Logout </div> \n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <NavLink onClick={toggleMenu} exact={true} activeClassName=\"link--active\" className={`${className}__link`} to=\"/\">Home</NavLink>\n                <NavLink onClick={toggleMenu} activeClassName=\"link--active\" className={`${className}__link`} to=\"/login\">Login</NavLink>\n            </React.Fragment>\n        )\n    }\n}\n\n    return (\n        <LayoutContainer>\n            { !mobile ?\n                (\n                <div className={className}>\n                    <NavLink exact={true} className={`${className}__logo`} to=\"/\">IMPACT</NavLink>\n                    <div className={`${className}__links`}>\n                        <Links />\n                    </div>\n                </div>\n                ) : \n                (\n                    <div className={`${className}`}>\n                        <div onClick={toggleMenu}>\n                            <SvgIcon className={`${className}__icon`} iconName=\"menu\" />\n                        </div>\n                        <NavLink to=\"/\" className={`${className}__logo`}>IMPACT</NavLink>\n                        { isMenuOpen && (\n                            <div className={`${className}__menu`}>\n                                <div className={`${className}__close`} onClick={toggleMenu}>\n                                    <SvgIcon iconName=\"back\" />\n                                    Luk\n                                </div>\n                                <div className={`${className}__links`}>\n                                    <Links />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )\n            }\n        </LayoutContainer>\n);\n};\n\nexport default Navigation;","import client from \"../apolloClient/apolloClient\";\nimport GraphQLSchema from \"../graphql\";\nimport { DocumentNode } from \"graphql\";\n\nexport async function isAuthenticated() {\n    const results = await client.query({\n        query: GraphQLSchema.WHO_AM_I\n    }).catch(e => {\n        console.log(\"IsAuthenticated: \",e)\n    })\n    if ( results ) {\n        return true;\n    }\n    return false;\n}\n\nexport async function getRefObject (role: string, refId: string) {\n    let query: DocumentNode = GraphQLSchema.GET_DEVELOPER;\n    switch (role) {\n        case \"Developer\": {\n            query = GraphQLSchema.GET_DEVELOPER;\n            break;\n        }\n        case \"Project Manager\": {\n            query = GraphQLSchema.GET_PROJECT_MANAGER;\n            break;\n        }\n        case \"Unit Manager\": {\n            query = GraphQLSchema.GET_UNIT_MANAGER;\n            break;\n        }\n        default: {\n            console.log(\"No Role was specified\");\n            break;\n        }\n    }\n    const results = await client.query({\n        query,\n        variables: {_id: refId}\n    }).catch(e => {\n        console.log(e)\n    })\n    if ( results ) {\n        return (results as any).data\n    }\n}","import * as React from 'react';\nimport LayoutContainer from '../../layout';\n\ninterface IFooter {\n}\n\nconst Footer: React.FC<IFooter> = ({}) => {\n  return (\n      <LayoutContainer>\n          <div className=\"footer\"></div>\n      </LayoutContainer>\n  )\n};\n\nexport default Footer;","import * as React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport client from \"./apolloClient/\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes/routes\";\nimport { AppContext, IAppContext } from \"./context/appContext\";\nimport Navigation from \"./shell/navigation\";\nimport { isAuthenticated, getRefObject } from \"./helpers/user\";\nimport Media from \"react-media\";\nimport { IToken } from \"./models/shared\";\nimport * as jwt from \"jsonwebtoken\";\nimport { Role, IDeveloper } from \"./models/models\";\nimport Footer from \"./shell/footer\";\n\ninterface IAppProps {}\n\nclass App extends React.PureComponent<IAppProps, IAppContext> {\n\tstate: IAppContext = {\n\t\tisAuth: false,\n\t\tisApp: false,\n\t\tuserId: undefined,\n\t\tobjectRefId: undefined,\n\t\trole: undefined,\n\t\tuser: undefined,\n\t\tlogout: () => {\n\t\t\tthis.setState({\n\t\t\t\tobjectRefId: undefined,\n\t\t\t\tuser: undefined,\n\t\t\t\tisAuth: false,\n\t\t\t\tisApp: false,\n\t\t\t\tuserId: undefined,\n\t\t\t\trole: undefined\n\t\t\t})\n\t\t},\n\t\tsetIsApp: (app: boolean) => {\n\t\t\tthis.setState({isApp: app})\n\t\t},\n\t\tsetAuth: (auth: boolean) => {\n\t\t\tthis.setState({isAuth: auth})\n\t\t},\n\t}\n\n\tasync componentDidUpdate() {\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (!!token) {\n\t\t\tconst { data } = jwt.decode(token) as IToken;\n\t\t\tthis.setState({ userId: data.id, role: data.role, objectRefId: data.objectRefId})\n\t\t\tconst { developer, unitManager, projectManager } = await getRefObject(data.role, data.objectRefId)\n\t\t\tif (data.role === Role.developer) {\n\t\t\t\tthis.setState({ user: developer})\n\t\t\t}\n\t\t\tif (data.role === Role.projectManager) {\n\t\t\t\tthis.setState({ user: projectManager})\n\t\t\t}\n\t\t\tif (data.role === Role.unitManager) {\n\t\t\t\tthis.setState({ user: unitManager})\n\t\t\t}\n\t\t}\n\t}\n\n\tasync componentWillMount() {\n\t\tconst urlParams = new URLSearchParams(document.location.search);\n\t\tif (urlParams.has(\"app\")) {\n\t\t\tthis.setState({isApp: true})\n\t\t}\n\t\tif (urlParams.has(\"token\")) {\n\t\t\tconst token = urlParams.get(\"token\")\n\t\t\tif ( !!token ) {\n\t\t\t\tconst { data } = jwt.decode(token) as IToken;\n\t\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t\t\tthis.setState({ userId: data.id, role: data.role, objectRefId: data.objectRefId, isAuth: true})\n\t\t\t\tconst { developer, unitManager, projectManager } = await getRefObject(data.role, data.objectRefId)\n\t\t\t\tif (data.role === Role.developer) {\n\t\t\t\t\tthis.setState({ user: developer})\n\t\t\t\t}\n\t\t\t\tif (data.role === Role.projectManager) {\n\t\t\t\t\tthis.setState({ user: projectManager})\n\t\t\t\t}\n\t\t\t\tif (data.role === Role.unitManager) {\n\t\t\t\t\tthis.setState({ user: unitManager})\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst token = localStorage.getItem(\"token\")\n\t\t\tif (!!token) {\n\t\t\t\tconst { data } = jwt.decode(token) as IToken;\n\t\t\t\tthis.setState({ userId: data.id, role: data.role, objectRefId: data.objectRefId})\n\t\t\t\tconst isAuth = await isAuthenticated();\n\t\t\t\tif (isAuth) {\n\t\t\t\t\tthis.setState({isAuth: true})\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t}\n\n\trender()  {\n\t\tconst { isApp } = this.state;\n\t\treturn (\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<AppContext.Provider value={this.state}>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<div className=\"app\">\n\t\t\t\t\t\t\t<Media query=\"(max-width: 900px)\">\n\t\t\t\t\t\t\t\t{matches =>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{!isApp && <Navigation mobile={matches} />}\n\t\t\t\t\t\t\t\t\t\t<Routes />\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Media>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Router>\n\t\t\t\t</AppContext.Provider>\n\t\t\t</ApolloProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './client/styles/styles.scss';\nimport App from './client/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}